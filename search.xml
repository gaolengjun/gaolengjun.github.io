<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo博客搭建踩坑系列</title>
      <link href="/2023/03/06/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B8%A9%E5%9D%91%E7%B3%BB%E5%88%97/"/>
      <url>/2023/03/06/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B8%A9%E5%9D%91%E7%B3%BB%E5%88%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ol><li>文章底部链接点开404<br><a href="https://imgse.com/i/ppZk34K"><img src="https://s1.ax1x.com/2023/03/06/ppZk34K.md.jpg" alt="ppZk34K.md.jpg"></a><blockquote><p>这个坑我踩了很久，百度了很多文档都无效。事实上，当你在本地启动博客时，点击底部链接是无效的，部署上线后点击才会生效</p></blockquote></li><li>butterfly主题中开启了404，启动博客后仍然无效<br><a href="https://imgse.com/i/ppZkWbn"><img src="https://s1.ax1x.com/2023/03/06/ppZkWbn.jpg" alt="ppZkWbn.jpg"></a><br><a href="https://imgse.com/i/ppZkRDs"><img src="https://s1.ax1x.com/2023/03/06/ppZkRDs.jpg" alt="ppZkRDs.jpg"></a><blockquote><p>答案同上。部署线上后才会生效</p></blockquote></li><li>修改配置后启动博客预览没生效<blockquote><p>hexo的命令都可以简化，例如<code>hexo server</code>,可以直接<code>hexo s</code>;<code>hexo generate</code>,可以直接写成<code>hexo g</code>等等。于是我自作聪明使用<code>hexo c</code>清理缓存，导致并没有清理缓存，修改不生效，而我并没有意识到自己的命令错误。清理缓存的正确命令是<code>hexo clean</code>,简写<code>hexo cl</code>。</p></blockquote></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 个人博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这又是一篇测试文章“</title>
      <link href="/2023/03/05/%E8%BF%99%E5%8F%88%E6%98%AF%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0%E2%80%9C/"/>
      <url>/2023/03/05/%E8%BF%99%E5%8F%88%E6%98%AF%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0%E2%80%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li><input checked="" disabled="" type="checkbox"> 喝水</li><li><input disabled="" type="checkbox"> 吃饭</li><li><input checked="" disabled="" type="checkbox"> 睡觉</li></ul><p>我和我的小伙伴们都笑了。:smile:</p><table><thead><tr><th>def</th><th>efwe</th><th>dfefe</th></tr></thead><tbody><tr><td>cedcs</td><td>csdcvsd</td><td>verw<br>ver</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《茜茜/致命网红 》2022 澳大利亚 喜剧爱情恐怖</title>
      <link href="/2023/03/05/%E3%80%8A%E8%8C%9C%E8%8C%9C-%E8%87%B4%E5%91%BD%E7%BD%91%E7%BA%A2-%E3%80%8B2022-%E6%BE%B3%E5%A4%A7%E5%88%A9%E4%BA%9A-%E5%96%9C%E5%89%A7%E7%88%B1%E6%83%85%E6%81%90%E6%80%96/"/>
      <url>/2023/03/05/%E3%80%8A%E8%8C%9C%E8%8C%9C-%E8%87%B4%E5%91%BD%E7%BD%91%E7%BA%A2-%E3%80%8B2022-%E6%BE%B3%E5%A4%A7%E5%88%A9%E4%BA%9A-%E5%96%9C%E5%89%A7%E7%88%B1%E6%83%85%E6%81%90%E6%80%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://imgse.com/i/ppEqoJP"><img src="https://s1.ax1x.com/2023/03/05/ppEqoJP.jpg" alt="ppEqoJP.jpg"></a><br><br>译名　茜茜&#x2F;致命网红<br><br>片名　Sissy<br><br>年代　2022<br><br>产地　澳大利亚<br><br>类别　喜剧&#x2F;爱情&#x2F;恐怖<br><br>语言　英语<br><br>上映日期　2022-03-11(西南偏南电影节)&#x2F;2022-09-29(美国)<br><br>IMDb评分　6.2&#x2F;10 from 4,426 users<br><br>豆瓣评分　6.2&#x2F;10 from 1238 users<br><br>导演　汉娜·巴洛 Hannah Barlow<br><br>编剧　汉娜·巴洛 Hannah Barlow<br><br>主演　叶林·韩 Yerin Ha<br><br>　　　　 　露西·巴雷特 Lucy Barrett<br><br>　　　　 　艾莎·迪伊 Aisha Dee<br><br>　　　　 　汉娜·巴洛 Hannah Barlow<br><br>　　　　 　瑞安·帕尼萨 Ryan Panizza<br><br>　　　　 　肖恩·马丁代尔 Shaun Martindale<br><br>　　　　 　Darcie Irwin-Simpson Darcie Irwin-Simpson<br></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介<br></h3><p>十几岁的好朋友塞西莉亚和艾玛在十年后相遇。塞西莉亚受邀参加艾玛的单身周末，在那里她和她的高中欺凌者一起被困在一个偏远的小屋里，并产生了复仇的欲望。<br></p><h3 id="下载链接："><a href="#下载链接：" class="headerlink" title="下载链接："></a>下载链接：<br></h3><h4 id="茜茜-中字-Sissy-2022-BD1080P-X265-AAC-kkkanba-mp4"><a href="#茜茜-中字-Sissy-2022-BD1080P-X265-AAC-kkkanba-mp4" class="headerlink" title="茜茜.中字.Sissy.2022.BD1080P.X265.AAC-kkkanba.mp4"></a><a href="https://pan.quark.cn/s/5c0a7f7ab5fa">茜茜.中字.Sissy.2022.BD1080P.X265.AAC-kkkanba.mp4</a></h4>]]></content>
      
      
      <categories>
          
          <category> 国外电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欧美 </tag>
            
            <tag> 恐怖 </tag>
            
            <tag> 戏剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客安装和启动</title>
      <link href="/2023/03/05/Hexo%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8/"/>
      <url>/2023/03/05/Hexo%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="下载nodejs"><a href="#下载nodejs" class="headerlink" title="下载nodejs"></a>下载nodejs</h2><p><a href="https://nodejs.org/en/">点击进入nodejs官网</a><br><a href="https://imgse.com/i/ppZefht"><img src="https://s1.ax1x.com/2023/03/06/ppZefht.md.jpg" alt="ppZefht.md.jpg"></a><br>下载后按照提示按照即可，几乎都是下一步下一步</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>关于git下载安装及教程详见<a href="%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E8%BD%AF%E4%BB%B6GIT%E7%9A%84%E4%BD%BF%E7%94%A8.md">版本控制软件GIT的使用</a></p><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>以上两个软件下载安装后开始安装Hexo<br>安装命令：<code>npm install -g hexo-cli</code><br>打开Git Bash终端工具，cd到你想创建Hexo博客的路径下，执行命令<code>hexo init myBlog</code>。这里的<code>MyBlog</code>是自定义的项目文件夹。事先创建好了项目文件目录，可以直接<code>hexo init</code>初始化<br><a href="https://imgse.com/i/ppZuojK"><img src="https://s1.ax1x.com/2023/03/06/ppZuojK.jpg" alt="ppZuojK.jpg"></a></p><h2 id="认识目录"><a href="#认识目录" class="headerlink" title="认识目录"></a>认识目录</h2><p><a href="https://imgse.com/i/ppZuONd"><img src="https://s1.ax1x.com/2023/03/06/ppZuONd.jpg" alt="ppZuONd.jpg"></a><br>这里有三个重要目录：</p><ol><li>_posts：发表的文章都存放在这个目录下</li><li>_config.yml：站点的配置文件</li><li>themes：下载的主题都存放在这个目录下</li></ol><h1 id="本地启动Hexo"><a href="#本地启动Hexo" class="headerlink" title="本地启动Hexo"></a>本地启动Hexo</h1><p>执行命令<code>hexo server</code>,简化命令<code>hexo s</code><br><a href="https://imgse.com/i/ppZKZ3q"><img src="https://s1.ax1x.com/2023/03/06/ppZKZ3q.jpg" alt="ppZKZ3q.jpg"></a><br>浏览器中打开<code>http://localhost:4000/</code>预览博客<br><a href="https://imgse.com/i/ppZKMbF"><img src="https://s1.ax1x.com/2023/03/06/ppZKMbF.md.jpg" alt="ppZKMbF.md.jpg"></a><br>当你看到这个默认主题的博客界面时，恭喜你，本地搭建成功了！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客搭建笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 个人博客 </tag>
            
            <tag> nodejs </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2021/02/27/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
      <url>/2021/02/27/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这是篇测试文章</p>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>版本控制软件GIT的使用</title>
      <link href="/2021/02/27/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E8%BD%AF%E4%BB%B6GIT%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/02/27/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E8%BD%AF%E4%BB%B6GIT%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="版本控制软件GIT的使用"><a href="#版本控制软件GIT的使用" class="headerlink" title="版本控制软件GIT的使用"></a>版本控制软件GIT的使用</h1><h2 id="git下载"><a href="#git下载" class="headerlink" title="git下载"></a>git下载</h2><ul><li>苹果和linux系统自带git <a href="https://git-scm.com/">windows用户下载地址</a></li></ul><h2 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h2><ul><li><p>配置电子邮件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;l119520@ooutlook.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>配置用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;gaolengjun&quot;</span><br></pre></td></tr></table></figure></li><li><p>配置编辑器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.editor vim</span><br></pre></td></tr></table></figure></li><li><p>配置合并工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global merge.tool vimdiff</span><br></pre></td></tr></table></figure></li><li><p>查看配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure></li></ul><h2 id="查询帮助"><a href="#查询帮助" class="headerlink" title="查询帮助"></a>查询帮助</h2><ul><li><p>语法：git help 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git help add</span><br></pre></td></tr></table></figure><p>该命令自动打开该参数浏览器详情页面</p></li></ul><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><ul><li><p>初始化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>在当前操作文件夹里生成**.git**文件夹</p></li><li><p>查看仓库状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></li><li><p>添加文件到索引区</p><p>在仓库目录里直接创建文件，git无法感知，需要执行下面命令让git追踪添加的文件，可以使用git status查看状态</p><p>第二个使用.的命令，可以将该目录下所有文件添加到索引区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add test.txt</span><br><span class="line">git add .</span><br></pre></td></tr></table></figure></li><li><p>提交</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;add test.txt&quot;</span><br></pre></td></tr></table></figure><p>引号中建议写上提交理由，知道你干了什么。提交文件后再使用git status查看状态就什么都没有了</p><h2 id="查看提交日志"><a href="#查看提交日志" class="headerlink" title="查看提交日志"></a>查看提交日志</h2><ul><li><p>完整日志</p><p>该命令查看已提交的文件，包括作者姓名、邮箱和提交日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure></li><li><p>查看近期几条记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log -2</span><br></pre></td></tr></table></figure></li><li><p>一行显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --oneline</span><br></pre></td></tr></table></figure></li><li><p>详细显示</p><p>该参数可以查看更新了那些内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log -p</span><br></pre></td></tr></table></figure></li></ul><h2 id="删除和更名"><a href="#删除和更名" class="headerlink" title="删除和更名"></a>删除和更名</h2></li><li><p>本地删除文件仍然要执行该命令让git感知该文件已被删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm read.md</span><br></pre></td></tr></table></figure></li><li><p>从索引区删除文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached style.css</span><br></pre></td></tr></table></figure></li><li><p>修改文件名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git mv test.txt test.md</span><br></pre></td></tr></table></figure></li><li><p>更新后提交</p><p>已经commit文件，再次增删代码后使用git status会红色提示modified:   index.html，表示该文件已发生更新，此刻需要重新<strong>git add index.html</strong>添加到索引区，使用<strong>git status</strong>会绿色提示<strong>modified:   index.html</strong>，再次git commit -m “add code”提交</p></li></ul><h2 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h2><ul><li><p>撤销更改</p><p>当更改文件后，尚未添加索引区，可以使用git命令恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git restore index.html</span><br><span class="line">git checkout -- index.html</span><br></pre></td></tr></table></figure></li><li><p>从索引区恢复</p><p>执行以下命令从索引区退出后，再执行上面命令恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git restore --staged index.html</span><br><span class="line">git reset HEAD index.html</span><br></pre></td></tr></table></figure></li></ul><h2 id="比较内容"><a href="#比较内容" class="headerlink" title="比较内容"></a>比较内容</h2><ul><li><p>未添加索引区前比较内容</p><p>不同的内容将以绿色标识出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure></li><li><p>添加到索引区比较内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached</span><br></pre></td></tr></table></figure></li></ul><h2 id="git忽略管理"><a href="#git忽略管理" class="headerlink" title="git忽略管理"></a>git忽略管理</h2><p>设置git忽略的文件，这些文件不参与git库的管理和提交</p><ol><li>在git管理目录下新建一个.gitignore文件，注意，这不是后缀，就是这个文件名</li><li>打开.gitignore文件，输入*.tem保存，意思是凡是后缀为.tem的文件会被git忽略管理，然后<strong>git status</strong>就看不到该文件了</li></ol><p>不管被忽略的文件在任何层级目录下，git都会忽略管理</p><h2 id="更新最后的提交"><a href="#更新最后的提交" class="headerlink" title="更新最后的提交"></a>更新最后的提交</h2><p>提交后发现有问题，不想修改后重复提交，在已提交的基础上更新内容</p><ol><li>修改文件后，git status查看状态</li><li>git add .添加索引区</li><li>使用git commit –amend命令提交，不会重新生成记录，可以git log -2查看日志</li></ol><h2 id="返回过去"><a href="#返回过去" class="headerlink" title="返回过去"></a>返回过去</h2><ul><li><p>更新了文件尚未添加索引区，但需要返回未修改前版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD</span><br></pre></td></tr></table></figure></li><li><p>返回上次提交版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD~</span><br></pre></td></tr></table></figure></li><li><p>返回指定版本</p><p>这里的数字是指定返回上两次前的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD~2</span><br></pre></td></tr></table></figure></li><li><p>根据版本ID返回指定版本</p><p>使用<strong>git log</strong>命令查看日志，可以看到版本id，特别颜色高亮显示；使用<strong>git log –oneline -4</strong>命令简单显示日志，id是简写的。使用该版本id可以硬性回滚版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard b6fb43b</span><br></pre></td></tr></table></figure></li><li><p>查询版本ID</p><p>如上操作可以根据版本id回滚版本，如果一不小心清屏了或者忘记版本id，就可以使用如下命令查询版本id再恢复该版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog -3</span><br></pre></td></tr></table></figure></li></ul><h2 id="使用分支"><a href="#使用分支" class="headerlink" title="使用分支"></a>使用分支</h2><p>在之前的操作都是在主分支（master)上，在实际开发中都是使用开发分支，开发分支相当于主分支的副本，每个人负责自己的模块，不同分支之间互不影响，确认无误后最终合并到主分支</p><ul><li><p>新建分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch dev</span><br></pre></td></tr></table></figure></li><li><p>查看所有分支</p><p>带星号的是当前所操作的分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br><span class="line">* master</span><br></pre></td></tr></table></figure></li><li><p>切换分支</p><p>第二条命令是创建分支同时切换到该分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout dev</span><br><span class="line">git checkout -b dev</span><br></pre></td></tr></table></figure></li></ul><h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><p>修改并提交开发分支后，确认无误后，需要合并到主分支</p><ul><li><p>确保切换到主分支（master)，使用以下命令合并分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge dev</span><br></pre></td></tr></table></figure></li><li><p>合并分支后，删除无用的开发分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d dev</span><br></pre></td></tr></table></figure></li></ul><h2 id="解决分支合并冲突"><a href="#解决分支合并冲突" class="headerlink" title="解决分支合并冲突"></a>解决分支合并冲突</h2><p>当团队中多人编辑同一文件的时候，难免出现源代码的编辑合并冲突问题</p><p>使用VS code会自带分支冲突菜单命令，设置以哪个分支为准进行合并以及比较内容。其次，解决分支合并冲突的问题就是手动修改代码</p><h2 id="使用TAG标签"><a href="#使用TAG标签" class="headerlink" title="使用TAG标签"></a>使用TAG标签</h2><p>使用tag标签给应用程序贴上版本号</p><ul><li><p>新建tag标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag V1.0.0</span><br></pre></td></tr></table></figure></li><li><p>查看所有tag标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure></li><li><p>查看版本详情</p><p>通过该命令可以查看这个版本的变动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show V1.0.1</span><br></pre></td></tr></table></figure></li></ul><h2 id="使用别名"><a href="#使用别名" class="headerlink" title="使用别名"></a>使用别名</h2><p>在git中可以给经常使用的命令取别名，以别名缩写的方式简化使用</p><p>给<strong>git status</strong>取别名，语法：<strong>git config –global alias.st status</strong></p><p>其它git命令同样设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.co checkout</span><br><span class="line">git co</span><br><span class="line">git config --global alias.br branch</span><br><span class="line">git br</span><br><span class="line">git config --global alias.cm commit</span><br><span class="line">git cm</span><br></pre></td></tr></table></figure><p>使用<strong>git config -l</strong>查看git全局设置，包括自定义的别名</p><h2 id="克隆远程仓库和推送"><a href="#克隆远程仓库和推送" class="headerlink" title="克隆远程仓库和推送"></a>克隆远程仓库和推送</h2><ol><li><p>克隆远程仓库</p><p>命令格式：<strong>git clone url</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/komavideo/LearnOSC.git</span><br></pre></td></tr></table></figure></li><li><p>查看所有分支，包括远程分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br><span class="line">remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">remotes/origin/dev</span><br><span class="line">remotes/origin/master</span><br></pre></td></tr></table></figure></li><li><p>远程分支迁移到本地</p><p>使用如上命令会红色显示远程分支，加入下方命令中迁移到本地</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch dev remotes/orgin/dev</span><br></pre></td></tr></table></figure></li><li><p>切换到开发分支，修改内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout dev</span><br></pre></td></tr></table></figure></li><li><p>提交前，先使用如下命令查看远程服务器设置</p><p>origin是远程服务器url的缩写，两者是一样的。fetch表示使用该命令获取仓库，使用push推送到远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br><span class="line">origin  https://gitee.com/komavideo/LearnOSC.git (fetch)</span><br><span class="line">origin  https://gitee.com/komavideo/LearnOSC.git (push)</span><br></pre></td></tr></table></figure></li><li><p>推送到远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin dev</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫必知必会的三大网页解析库</title>
      <link href="/2021/02/19/Python%E7%88%AC%E8%99%AB%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E7%9A%84%E4%B8%89%E5%A4%A7%E7%BD%91%E9%A1%B5%E8%A7%A3%E6%9E%90%E5%BA%93/"/>
      <url>/2021/02/19/Python%E7%88%AC%E8%99%AB%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E7%9A%84%E4%B8%89%E5%A4%A7%E7%BD%91%E9%A1%B5%E8%A7%A3%E6%9E%90%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="掌握这三大网页解析库，基本可以解决100-网页提取问题"><a href="#掌握这三大网页解析库，基本可以解决100-网页提取问题" class="headerlink" title="掌握这三大网页解析库，基本可以解决100%网页提取问题"></a>掌握这三大网页解析库，基本可以解决100%网页提取问题</h2><h3 id="xpath"><a href="#xpath" class="headerlink" title="xpath"></a>xpath</h3><ul><li>最方便最快捷的解析方式</li></ul><p>解析网页xpath是首选，它易读，方便书写，使用起来非常简单。使用谷歌或edge浏览器可以打开元素，直接书写xpth，所见即所得。</p><p>书写xpath语法，所选节点会在html中实时高亮显示。<br><img src="https://ftp.bmp.ovh/imgs/2021/02/7c45bf814645704c.png" alt="xpath演示"></p><!-- ![xpath演示](Python爬虫必知必会的三大网页解析库/xpath.png) --><p>xpath语法理解起来也很简单，“&#x2F;”表示选择直接子节点，例如：&#x2F;div&#x2F;p，p是div下的直接子节点；“&#x2F;&#x2F;”表示选择非直接子节点，例如：&#x2F;div&#x2F;&#x2F;p，p和div之间还有其它节点。</p><p>使用“&#x2F;”选择可以联想到电脑里的资源管理器的资源路径，一个意思，“&#x2F;&#x2F;”在xpath选择中最常用，“&#x2F;”逐级选择，使用“&#x2F;&#x2F;”跳选。</p><p>&#x2F;&#x2F;div[@class&#x3D;”list”]&#x2F;&#x2F;a&#x2F;&#x2F;p，中括号里的写法是指定该div的class属性，进一步限定选择。最后的p标签才是我们选择的对象，如果你要选择p标签的文本，那么后面还需要跟上“&#x2F;text()”，完整写法：&#x2F;&#x2F;div[@class&#x3D;”list”]&#x2F;&#x2F;a&#x2F;&#x2F;p&#x2F;text()</p><p>爬取url是家常便饭，xpath获取某标签中的url也是非常容易，来看看吧！<br><img src="https://ftp.bmp.ovh/imgs/2021/02/1c913be1185cd7a6.png" alt="xpath获取url"></p><!-- ![xpath演示](Python爬虫必知必会的三大网页解析库/xpath选择url.png) --><p>是的，只需要在最后的标签加上“&#x2F;@href”即可获取href属性对应的url。</p><p>非常容易！</p><p>在这里仅作几个例子演示，xpath选择方式非常多，掌握其中常用几种，基本可以解决99%的网页。</p><p>想完整学习xpath，可以直接通过搜索引擎搜索，这样的视频教程和博客文档多如牛毛，在python语言中，使用xpath解析网页，首先安装使用lxml模块进行字符串转换成html，因为xpath只能处理html文档，在这里我将我学习lxml和xpath笔记分享出来。</p><p><a href="https://share.mubu.com/doc/d3yY--gYM">xpath语法</a> <a href="https://share.mubu.com/doc/3XGR5RgY0Yk">lxml提取数据</a></p><h3 id="pyquery"><a href="#pyquery" class="headerlink" title="pyquery"></a>pyquery</h3><ul><li>最佳CSS选择器模块</li></ul><p>pyquery是个非常不错的css选择器模块，熟知前端的都知道，css选择器有多方便，不亚于xpath。bs4虽然很受欢迎，很主流，但选择节点太繁琐，步骤多。pyquery真心不错，不使用xpath，pyquery是我最爱使用的网页解析库，它有多好用来演示下。</p><p><img src="https://ftp.bmp.ovh/imgs/2021/02/5b130571753a096a.png" alt="pyquery"></p><!-- ![xpath演示](Python爬虫必知必会的三大网页解析库/pyquery选择影评作者.png) --><ul><li>爬取豆瓣影评作者</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36 Edg/88.0.705.68&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line">item_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100</span>,<span class="number">20</span>):</span><br><span class="line">    url = <span class="string">f&#x27;https://movie.douban.com/review/best/?start=<span class="subst">&#123;i&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line">    r = httpx.get(url,headers = headers).text</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pyquery解析</span></span><br><span class="line">    doc = pq(r)</span><br><span class="line">    items = doc(<span class="string">&#x27;.review-list .main-hd a.name&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> author <span class="keyword">in</span> items.items():</span><br><span class="line">        item_list.append(author.text())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(item_list)</span><br></pre></td></tr></table></figure><p>打印结果：</p><ul><li>[‘刷鞋大王’, ‘R荣十二’, ‘珍珠奶猹’, ‘朝暮雪’, ‘天下行走’, ‘保温杯喝冷水’, ‘枨不戒’, ‘難捨難分’, ‘江湖骗子’, ‘筷子兄弟-鸡腿’, ‘看电影看到死’, ‘上下楼梯靠右走’, ‘lanrachel’, ‘沉睡的小鹏’, ‘粉粿症候群’, ‘马尾鱼’, ‘阿甘正二’, ‘小良’, ‘之方’, ‘Fenster’, ‘咦，那个胖大海’, ‘错是世界不是我’, ‘胡萝卜糊了’, ‘应该没什么不同’, ‘雨梨’, ‘Gaaitung-Hok’, ‘黄黄国王’, ‘Hoesdont_tryme’, ‘啊？啊！’, ‘莎士比亚的妹妹’, ‘诸事大吉’, ‘岁月静好’, ‘大葱’, ‘沅有芷兮’, ‘倩儿的小岛’, ‘滔滔涛涛’, ‘地下游艺宫’, ‘沐如蓝’, ‘元宵灯会’, ‘正离子-雪’, ‘ROSES’, ‘Thelonious’, ‘王兆鑫-DOC’, ‘陈年老大’, ‘Kubrick’, ‘追剧练习生’, ‘奈此朱梁跋扈何’, ‘光’, ‘ououou’, ‘Yilianmengbi🍁’]</li></ul><p>pyquery仅用了三行代码，第一行代码css选择，第二行代码遍历出所有作者名称添加到列表，简单高效！</p><h3 id="re-正则表达式"><a href="#re-正则表达式" class="headerlink" title="re 正则表达式"></a>re 正则表达式</h3><ul><li>数据过滤提取万金油</li></ul><p>你是谁？你旁边都有啥？</p><p>这就是正则表达式提取数据的主要思路。</p><ul><li>以豆瓣音乐为例</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 Edg/88.0.705.74&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;bid=BrkWGYAPap4; __yadk_uid=lw6P9KtcK917gHOxQ7KFBg9ZAO6qM2Zc; _vwo_uuid_v2=D455FFECD444260935D06DABA5027F6F2|432066f1de62232e73a12fc1b7d76cd5; __gads=ID=79f66f4cd94a5914-2273543234c50089:T=1608093744:RT=1608093744:S=ALNI_MYwKkM1dNWT2eboajA5R_tpqDKMoQ; ll=&quot;118259&quot;; viewed=&quot;2995812_1401853_1431596_6816154_3040149&quot;; ct=y; gr_user_id=8bb1c9a9-726f-41ce-a3e1-ac45518dccfb; __utma=30149280.451464343.1608093740.1613747695.1613807914.17; __utmc=30149280; __utmz=30149280.1613807914.17.9.utmcsr=cn.bing.com|utmccn=(referral)|utmcmd=referral|utmcct=/; __utmt=1; gr_session_id_22c937bbd8ebd703f2d8e9445f7dfd03=167484ac-1d68-49da-9138-6c24dc423db6; gr_cs1_167484ac-1d68-49da-9138-6c24dc423db6=user_id%3A0; __utmt_douban=1; ap_v=0,6.0; gr_session_id_22c937bbd8ebd703f2d8e9445f7dfd03_167484ac-1d68-49da-9138-6c24dc423db6=true; _pk_ref.100001.afe6=%5B%22%22%2C%22%22%2C1613807982%2C%22https%3A%2F%2Fcn.bing.com%2F%22%5D; _pk_ses.100001.afe6=*; _pk_id.100001.afe6=0cde17f985e0e19a.1608093739.8.1613808129.1608277773.; __utmb=30149280.5.10.1613807914&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r = httpx.<span class="title function_">get</span>(<span class="string">&#x27;https://music.douban.com/chart&#x27;</span>,headers = headers).<span class="property">text</span></span><br><span class="line">result = re.<span class="title function_">findall</span>(<span class="string">&#x27;&lt;a href=&quot;javascript:;&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>,r)</span><br><span class="line"><span class="title function_">print</span>(result)</span><br></pre></td></tr></table></figure><p>输出结果：</p><ul><li>[‘无名曲’, ‘PAP’, ‘酒色器迷 （寒山尺八 叁）’, ‘Ⅷ’, ‘五楼’, ‘Fade out’, ‘162-气人的小孩-4500’, ‘ARASHI’, ‘想告诉你她已经离开’, ‘致青春-Youth’, ‘近视-2021.01’, ‘《shamed》伴奏demo’, ‘风吟 Wind Singing’, ‘北沙滩’, ‘寻光’, ‘RED（五首钢琴曲以及念诗）’, ‘十一月 山间晚祷（古筝独奏 陈虹蕗 ）’, ‘海战Moba_乡村_Boss’, ‘阳春（神奇秘谱）丝弦-丹泉琴-2021-01-24_20-40’, ‘rocket’]</li></ul><p>python中的正则表达式是re模块，在爬虫中，使用最多的方法就是findall函数，顾名思义查找全部。括号里填入的第一个参数就是正则表达式，第二个参数是待匹配的文本。</p><p>‘&lt;a href&#x3D;”javascript:;”&gt;(.*?)</a>‘，这段正则中的圆括号里才是我们要提取的内容，而圆括号外只是参考，告诉正则，你要提取的内容它的左边是什么，右边是什么。圆括号里的“.*?”,点表示匹配任意符号，星号匹配零次或多次，问号是非贪婪模式匹配。</p><p>很多人觉得正则表达式复杂，因为正则表达式的元字符非常多。什么是元字符？“.*?”这三个就是元字符，它们分别匹配某一类型的数据。再比如，一个“+”在正则中就表示匹配一次或多次，“\d”就表示匹配数字。“\D”就表示匹配非数字……元字符太多了，这里介绍不完的。学习正则不必把正则所有元字符死记硬背，只需要掌握正则在不同编程语言中的语法使用即可，当提取某一类型的数据时，直接搜索引擎搜索好了，这样的资料太多了，很好找，使用起来就像查字典般容易。</p><p>正则搜索内容最高效，它不仅仅只针对网页，任何文本字符串类型都支持，所以说它是万金油。xpath提取网页数据是首选，如果html文档中的数据嵌入在javascript标签中，xpath就无能为力，何以解忧？唯有正则。</p><p>最后，奉上我的正则学习笔记。<br><a href="https://share.mubu.com/doc/7HV42Ee9a-H">python正则表达式学习笔记</a></p><p>以上就是我使用python爬虫最推荐的三大网页解析库，熟练掌握任何网页不在话下，轻而易举过滤数据，精确提取。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js分号问题</title>
      <link href="/2021/02/19/node.js%E5%88%86%E5%8F%B7%E9%97%AE%E9%A2%98/"/>
      <url>/2021/02/19/node.js%E5%88%86%E5%8F%B7%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="node-js分号问题"><a href="#node-js分号问题" class="headerlink" title="node.js分号问题"></a>node.js分号问题</h1><p><strong>js是可以省略分号的，但要注意以下几种情况</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">say</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">say</span>()</span><br><span class="line"></span><br><span class="line">;(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hell&#x27;</span>)</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line">;[<span class="string">&#x27;苹果&#x27;</span>,<span class="string">&#x27;香蕉&#x27;</span>].<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">;<span class="string">`hello`</span>.<span class="title function_">toString</span>()</span><br></pre></td></tr></table></figure><p>以：</p><ol><li>（）</li><li>[]</li><li>&#96;&#96;</li></ol><p>开头会报错，需要在这些符号前添加分号（；），或者添加“！”和“~”，一般建议添加分号。</p>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取文件状态信息</title>
      <link href="/2021/02/14/%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF/"/>
      <url>/2021/02/14/%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="获取文件状态信息"><a href="#获取文件状态信息" class="headerlink" title="获取文件状态信息"></a>获取文件状态信息</h6><p>异步操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line">fs.<span class="title function_">stat</span>(path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;file.txt&#x27;</span>),<span class="keyword">function</span> (<span class="params">err,stat</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(stat);  <span class="comment">//获取文件信息</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(stat.<span class="title function_">isDirectory</span>());    <span class="comment">//判断是不是目录</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(stat.<span class="title function_">isFile</span>());    <span class="comment">//判断是不是文件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>使用箭头函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs.<span class="title function_">stat</span>(path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;file.txt&#x27;</span>),<span class="function">(<span class="params">err,stat</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(stat)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(stat.<span class="title function_">isDirectory</span>())</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(stat.<span class="title function_">isFile</span>())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> result = fs.<span class="title function_">statSync</span>(path.<span class="title function_">join</span>(__dirname));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Buffer对象</title>
      <link href="/2021/02/14/Buffer%E5%AF%B9%E8%B1%A1/"/>
      <url>/2021/02/14/Buffer%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="Buffer对象"><a href="#Buffer对象" class="headerlink" title="Buffer对象"></a>Buffer对象</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> buf = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;鸡你太美&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf);</span><br></pre></td></tr></table></figure><p>输出结果：&lt;Buffer e9 b8 a1 e4 bd a0 e5 a4 aa e7 be 8e&gt;</p><p>返回的是十六进制数，一个中文字符占三位</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> buf2 = <span class="title class_">Buffer</span>.<span class="title function_">alloc</span>(<span class="number">10</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf2)</span><br></pre></td></tr></table></figure><p>输出结果：&lt;Buffer 00 00 00 00 00 00 00 00 00 00&gt;</p><p>传入的是长度，返回的是零值</p><h6 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><p>输出结果：[ ‘1’, ‘2’, ‘3’ ]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">10</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1)</span><br></pre></td></tr></table></figure><p>输出结果：[ &lt;10 empty items&gt; ]</p><p>这里为10个空值</p><h6 id="Buffer类方法"><a href="#Buffer类方法" class="headerlink" title="Buffer类方法"></a>Buffer类方法</h6><h6 id="查询个数"><a href="#查询个数" class="headerlink" title="查询个数"></a>查询个数</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> buf = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;鸡你太美&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf);</span><br><span class="line"><span class="keyword">let</span> buf2 = <span class="title class_">Buffer</span>.<span class="title function_">alloc</span>(<span class="number">10</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf2)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf.<span class="property">length</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf2.<span class="property">length</span>);</span><br></pre></td></tr></table></figure><p>创建的buffer对象，个数不能改变</p><h6 id="判断编码是否支持"><a href="#判断编码是否支持" class="headerlink" title="判断编码是否支持"></a>判断编码是否支持</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Buffer</span>.<span class="title function_">isEncoding</span>(<span class="string">&#x27;utf8&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Buffer</span>.<span class="title function_">isEncoding</span>(<span class="string">&#x27;gbk&#x27;</span>))</span><br></pre></td></tr></table></figure><p>输出结果：</p><p>true<br>false</p><h6 id="判断是否Buffer对象"><a href="#判断是否Buffer对象" class="headerlink" title="判断是否Buffer对象"></a>判断是否Buffer对象</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> buf2 = <span class="title class_">Buffer</span>.<span class="title function_">alloc</span>(<span class="number">10</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Buffer</span>.<span class="title function_">isBuffer</span>(buf2));</span><br></pre></td></tr></table></figure><p>输出结果：true</p><h6 id="查看byte数据长度"><a href="#查看byte数据长度" class="headerlink" title="查看byte数据长度"></a>查看byte数据长度</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Buffer</span>.<span class="title function_">byteLength</span>(<span class="string">&#x27;鸡你太美&#x27;</span>))</span><br></pre></td></tr></table></figure><p>查看编码后的byte数据的长度，不指定编码默认UTF-8</p><h6 id="合并Buffer对象"><a href="#合并Buffer对象" class="headerlink" title="合并Buffer对象"></a>合并Buffer对象</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> buf1 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;wolfcode&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> buf2 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;.cn&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> concatBuf = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>([buf1,buf2]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(concatBuf.<span class="title function_">toString</span>());</span><br></pre></td></tr></table></figure><p>使用Buffer类concat方法将多个Buffer对象合并成一个，再用toString函数转成字符串类型</p><h6 id="Buffer实例方法"><a href="#Buffer实例方法" class="headerlink" title="Buffer实例方法"></a>Buffer实例方法</h6><h6 id="写入Buffer数据"><a href="#写入Buffer数据" class="headerlink" title="写入Buffer数据"></a>写入Buffer数据</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> buf = <span class="title class_">Buffer</span>.<span class="title function_">alloc</span>(<span class="number">10</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf);</span><br><span class="line"><span class="keyword">let</span> len = buf.<span class="title function_">write</span>(<span class="string">&#x27;wolfcode&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(len);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf.<span class="title function_">toString</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf.<span class="title function_">toJSON</span>());</span><br></pre></td></tr></table></figure><p>输出结果：</p><p>&lt;Buffer 00 00 00 00 00 00 00 00 00 00&gt;<br>8<br>&lt;Buffer 77 6f 6c 66 63 6f 64 65 00 00&gt;<br>wolfcode<br>{<br>  type: ‘Buffer’,<br>  data: [<br>    119, 111, 108, 102,<br>     99, 111, 100, 101,<br>      0,   0<br>  ]<br>}</p><p>使用Buffer的实例方法write写入Buffer数据</p><p>使用toString方法转成字符串类型，注意：非文本信息转成字符串会乱码，没有意义</p><p>使用toJSON方法转成json类型，数据变成十进制</p>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Buffer对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>path模块</title>
      <link href="/2021/02/14/path%E6%A8%A1%E5%9D%97/"/>
      <url>/2021/02/14/path%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="常用path方法"><a href="#常用path方法" class="headerlink" title="常用path方法"></a>常用path方法</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="property">sep</span>)   <span class="comment">//获取操作系统的路径分隔符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="property">delimiter</span>)    <span class="comment">//获取操作系统的环境变量分隔符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">basename</span>(__filename))    <span class="comment">//获取当前文件名，包含扩展名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">basename</span>(__filename,<span class="string">&#x27;.js&#x27;</span>))    <span class="comment">//获取当前文件名，不包含扩展名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">dirname</span>(__filename))    <span class="comment">//获取当前路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(__dirname)    <span class="comment">//获取当前路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(__filename)    <span class="comment">//获取当前文件的绝对路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">extname</span>(__filename))    <span class="comment">//获取当前文件扩展名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">parse</span>(__filename))    <span class="comment">//将文件路径解析为js对象返回</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">isAbsolute</span>(__filename))    <span class="comment">//判断是否绝对路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">join</span>(__dirname,file.<span class="property">txt</span>))    <span class="comment">//拼接路径，如在下一级目录，依次添加目录名参数，以操作系统路径分隔符拼接</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">resolve</span>(<span class="string">&#x27;f:&#x27;</span>,<span class="string">&#x27;fb&#x27;</span>,<span class="string">&#x27;cd&#x27;</span>))    <span class="comment">//拼接路径，第一个参数是盘符，不写默认拼接当前js文件所在盘符</span></span><br></pre></td></tr></table></figure><h6 id="路径字符串和js对象转换"><a href="#路径字符串和js对象转换" class="headerlink" title="路径字符串和js对象转换"></a>路径字符串和js对象转换</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">parse</span>(__filename))    </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">将文件路径字符串解析为js对象返回</span></span><br><span class="line"><span class="comment">返回结果：</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  root: &#x27;C:\\&#x27;,</span></span><br><span class="line"><span class="comment">  dir: &#x27;C:\\Users\\lujunjie\\WebstormProjects\\untitled\\day1&#x27;,</span></span><br><span class="line"><span class="comment">  base: &#x27;path.js&#x27;,</span></span><br><span class="line"><span class="comment">  ext: &#x27;.js&#x27;,</span></span><br><span class="line"><span class="comment">  name: &#x27;path&#x27;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*\</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pathobj = &#123;</span><br><span class="line">    <span class="attr">root</span>: <span class="string">&#x27;C:\\&#x27;</span>,</span><br><span class="line">    <span class="attr">dir</span>: <span class="string">&#x27;C:\\Users\\lujunjie\\WebstormProjects\\untitled\\day1&#x27;</span>,</span><br><span class="line">    <span class="attr">base</span>: <span class="string">&#x27;path.js&#x27;</span>,</span><br><span class="line">    <span class="attr">ext</span>: <span class="string">&#x27;.js&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;path&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">format</span>(pathobj))</span><br><span class="line"><span class="comment">//输出结果：C:\Users\lujunjie\WebstormProjects\untitled\day1\path.js</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全局对象和定时器</title>
      <link href="/2021/02/14/%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
      <url>/2021/02/14/%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%AE%9A%E6%97%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="全局对象"><a href="#全局对象" class="headerlink" title="全局对象"></a>全局对象</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">global</span>.<span class="property">a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">global</span>.<span class="property">a</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br></pre></td></tr></table></figure><p>使用global关键字声明全局变量</p><h6 id="跟踪程序执行流程"><a href="#跟踪程序执行流程" class="headerlink" title="跟踪程序执行流程"></a>跟踪程序执行流程</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">global</span>.<span class="property">console</span>.<span class="title function_">log</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">trace</span>();</span><br></pre></td></tr></table></figure><p>使用trace查看程序源码调用</p><h6 id="获取执行文件目录和文件名"><a href="#获取执行文件目录和文件名" class="headerlink" title="获取执行文件目录和文件名"></a>获取执行文件目录和文件名</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(__filename);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(__dirname);</span><br></pre></td></tr></table></figure><p>__filename：查看执行文件名</p><p>__dirname：获取执行文件所在目录</p><h6 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这个炸弹爆了！&#x27;</span>)</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h6 id="清除定时器"><a href="#清除定时器" class="headerlink" title="清除定时器"></a>清除定时器</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这个炸弹爆了！&#x27;</span>)</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">clearTimeout</span>(timer);</span><br></pre></td></tr></table></figure><p>不会执行。定时器不会立即执行，而是等待1秒后执行，程序不会等待1秒执行会继续往下执行，遇到clearTimeout方法会清除定时器</p>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 全局对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数</title>
      <link href="/2021/02/14/%E5%87%BD%E6%95%B0/"/>
      <url>/2021/02/14/%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="函数对象解构赋值"><a href="#函数对象解构赋值" class="headerlink" title="函数对象解构赋值"></a>函数对象解构赋值</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params">&#123;name,age&#125;</span>) &#123;</span><br><span class="line">   age += <span class="number">1</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">15</span>&#125;);</span><br><span class="line"><span class="title function_">func</span>(&#123;<span class="attr">age</span>:<span class="number">15</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure><p>通过键值形式传参，可以避免参数传反</p><h6 id="设置默认值"><a href="#设置默认值" class="headerlink" title="设置默认值"></a>设置默认值</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params">&#123;name,age&#125; = &#123;&#125;</span>) &#123;</span><br><span class="line">   age += <span class="number">1</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>();</span><br></pre></td></tr></table></figure><p>func()相当于传入了undefined，使用默认值，默认值是空值，空值加1返回NaN</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params">&#123;name=<span class="string">&#x27;xx&#x27;</span>,age= <span class="number">25</span>&#125; = &#123;&#125;</span>) &#123;</span><br><span class="line">   age += <span class="number">1</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>();</span><br></pre></td></tr></table></figure><p>执行对象解构赋值，因为没有解构值，解构默认值要生效：name&#x3D;’xx’,age&#x3D; 25</p><h6 id="接收用户任意值"><a href="#接收用户任意值" class="headerlink" title="接收用户任意值"></a>接收用户任意值</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params">...v</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>形参使用…v，表示接收用户任意长度数值，赋值给v</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params">a,b,c,...v</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>函数里声明了形参对应传参，剩余的就是默认值v</p><h6 id="数组传参"><a href="#数组传参" class="headerlink" title="数组传参"></a>数组传参</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params">a,b</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(a,b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>(...[<span class="number">1</span>,<span class="number">2</span>])</span><br></pre></td></tr></table></figure><p>…[1,2],这种写法是将数组里的元素拆开传入参数</p><h6 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fun1 = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fun1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fun1</span>();</span><br></pre></td></tr></table></figure><p>函数名省略掉，使用变量接收函数，调用函数变量加括号调用</p><h6 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fun1</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun2</span> = (<span class="params"></span>) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fun1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">fun2</span>();</span><br></pre></td></tr></table></figure><p>箭头函数省略掉function关键字和函数名，括号后用&#x3D;&gt;，后面跟上函数体，省略掉花括号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// let fun2 = function (x) &#123;</span></span><br><span class="line"><span class="comment">//    console.log(x);</span></span><br><span class="line"><span class="comment">//    console.log(&#x27;fun2&#x27;);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// fun2(1);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用箭头函数简化匿名函数</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun2</span> = x =&gt; &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(x);<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fun2&#x27;</span>);&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fun2</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>形参只有一个时括号可以省略，函数体中多个语句花括号不能省略，多个语句用分号分隔</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fun3 = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&#x27;fun3&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun3</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun33</span> = (<span class="params"></span>) =&gt; <span class="string">&#x27;fun33&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun33</span>())</span><br></pre></td></tr></table></figure><p>没有形参时括号不能省略，return关键字也可以省略</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fun4 = <span class="keyword">function</span> (<span class="params">x,y</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun4</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">fun44 = <span class="function">(<span class="params">x,y</span>) =&gt;</span> x + y;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun44</span>(<span class="number">3</span>,<span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>多个形参括号不能省略，return关键字也可以省略</p><h6 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ladies = [<span class="string">&#x27;西施&#x27;</span>,<span class="string">&#x27;王昭君&#x27;</span>,<span class="string">&#x27;貂蝉&#x27;</span>,<span class="string">&#x27;杨玉环&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// ladies.forEach(function (value,index,array) &#123;</span></span><br><span class="line"><span class="comment">//    console.log(value,index,array);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">ladies.<span class="title function_">forEach</span>(<span class="function">(<span class="params">value,index,array</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(value,index,array))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>查询字符串&amp;模板字符串</title>
      <link href="/2021/02/14/%E6%9F%A5%E8%AF%A2%E5%AD%97%E7%AC%A6%E4%B8%B2&amp;%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2&amp;%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC/"/>
      <url>/2021/02/14/%E6%9F%A5%E8%AF%A2%E5%AD%97%E7%AC%A6%E4%B8%B2&amp;%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2&amp;%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="查询字符串开头结尾和包括"><a href="#查询字符串开头结尾和包括" class="headerlink" title="查询字符串开头结尾和包括"></a>查询字符串开头结尾和包括</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&#x27;e&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&#x27;f&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">startsWith</span>(<span class="string">&#x27;h&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">startsWith</span>(<span class="string">&#x27;hello&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">startsWith</span>(<span class="string">&#x27;ha&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">endsWith</span>(<span class="string">&#x27;h&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">endsWith</span>(<span class="string">&#x27;world&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">endsWith</span>(<span class="string">&#x27;hello&#x27;</span>))</span><br></pre></td></tr></table></figure><ul><li>includes()：查询字符串是否包含某个字符串，有返回true,没有返回false</li><li>startsWith()：检查字符串是否以某个字符串开头，是返回true,否则返回false</li><li>endsWith()：检查字符串是否以某个字符串结尾，是返回true,否则返回false</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">startsWith</span>(<span class="string">&#x27;h&#x27;</span>,<span class="number">1</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">startsWith</span>(<span class="string">&#x27;h&#x27;</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>第二个参数是索引，从0开始，字符串和索引正确返回true，错误返回false</p><h6 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串拼接</span></span><br><span class="line"><span class="comment">// function func(name,age) &#123;</span></span><br><span class="line"><span class="comment">//     return &#x27;我是&#x27; + name + &#x27;，年龄&#x27; + age;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params">name,age</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`我是<span class="subst">$&#123;name&#125;</span>年龄<span class="subst">$&#123;age&#125;</span>`</span>;<span class="comment">//使用模板字符串，esc键下的`键包裹</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">func</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="number">25</span>));</span><br></pre></td></tr></table></figure><h6 id="多行文本"><a href="#多行文本" class="headerlink" title="多行文本"></a>多行文本</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> multiLineString = <span class="string">`</span></span><br><span class="line"><span class="string">这是一个多行文本</span></span><br><span class="line"><span class="string">这真的是一个多行文本</span></span><br><span class="line"><span class="string">你信吗</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(multiLineString)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分支语句与循环</title>
      <link href="/2021/02/14/%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5%E4%B8%8E%E5%BE%AA%E7%8E%AF/"/>
      <url>/2021/02/14/%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5%E4%B8%8E%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>while循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (num &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    num += <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;at last,num is:&#x27;</span>,num);</span><br></pre></td></tr></table></figure><p>do while循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    num += <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">while</span>(num &lt; <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;at last,num is:&#x27;</span>,num);</span><br></pre></td></tr></table></figure><p>do while先执行do语句块再判断，所以至少先执行一遍再判断是否继续循环</p><p>for循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>;i &lt; <span class="number">5</span>;i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第二种写法</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; j &lt; <span class="number">10</span>;) &#123;</span><br><span class="line">    sum += j;</span><br><span class="line">    j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum)</span><br><span class="line"><span class="comment">//遍历对象</span></span><br><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">    a : <span class="number">1</span>,</span><br><span class="line">    b : <span class="number">2</span>,</span><br><span class="line">    c :<span class="string">&#x27;str&#x27;</span>,</span><br><span class="line">    d : <span class="literal">false</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> o) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;key:&#x27;</span>,key,<span class="string">&#x27;value:&#x27;</span>,o[key])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>switch语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">&#x27;str&#x27;</span>;</span><br><span class="line"><span class="keyword">switch</span>(s) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;str&#x27;</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;is str&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="attr">false</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;is boolean false&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;default statment&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//逐一寻找case中的表达式，满足则打印case下的语句，如果都不符合就会执行default语句</span></span><br><span class="line"><span class="comment">//多个case语句满足时，只会执行第一个</span></span><br></pre></td></tr></table></figure><p>break循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>;i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i === <span class="number">5</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;i:&#x27;</span>,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>continue跳出本次循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>;i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i === <span class="number">5</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;i:&#x27;</span>,i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分支语句 </tag>
            
            <tag> 判断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模块</title>
      <link href="/2021/02/14/%E6%A8%A1%E5%9D%97/"/>
      <url>/2021/02/14/%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="自定义模块和导入导出"><a href="#自定义模块和导入导出" class="headerlink" title="自定义模块和导入导出"></a>自定义模块和导入导出</h6><p>导出模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">a,b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">sum</span> = sum;</span><br><span class="line"><span class="comment">// console.log(module.exports);</span></span><br></pre></td></tr></table></figure><p>引用模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="built_in">require</span>(<span class="string">&#x27;./pretty.js&#x27;</span>);</span><br><span class="line"><span class="comment">// console.log(p)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="title function_">sum</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>加载js文件后缀可以省略，会从.js、.json、.node顺序依次加载</p><h6 id="引入内置模块"><a href="#引入内置模块" class="headerlink" title="引入内置模块"></a>引入内置模块</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象</title>
      <link href="/2021/02/14/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2021/02/14/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="类与继承"><a href="#类与继承" class="headerlink" title="类与继承"></a>类与继承</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name,age</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">showInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>,<span class="variable language_">this</span>.<span class="property">age</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">showName</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这个人活了&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;高冷俊&#x27;</span>,<span class="number">22</span>);</span><br><span class="line">person.<span class="title function_">showInfo</span>();</span><br><span class="line"><span class="title class_">Person</span>.<span class="title function_">showName</span>();</span><br></pre></td></tr></table></figure><p>类中的方法不需要带function关键字。类中的方法前添加static关键字表示该方法是一个静态方法。静态方法无法通过实例调用，只能通过类调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">showName</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">die</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这个动物死了&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mouse</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;   <span class="comment">//extends关键字告诉该类属于某类的子类</span></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name,color</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name);    <span class="comment">//使用父类属性</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">color</span> = color;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">showInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>,<span class="variable language_">this</span>.<span class="property">color</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="title class_">Mouse</span>(<span class="string">&#x27;jerry&#x27;</span>,<span class="string">&#x27;brown&#x27;</span>);</span><br><span class="line">m.<span class="title function_">showName</span>();</span><br><span class="line">m.<span class="title function_">showInfo</span>();</span><br></pre></td></tr></table></figure><p>通过extends关键字告诉该类继承其它类，类中使用super()继承父类属性</p>]]></content>
      
      
      <categories>
          
          <category> node基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>海贼王</title>
      <link href="/Gallery/haizeiwang.html"/>
      <url>/Gallery/haizeiwang.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://images4.alphacoders.com/616/616945.png","alt":""},{"url":"https://images7.alphacoders.com/402/402897.jpg","alt":""},{"url":"https://images3.alphacoders.com/174/174965.jpg","alt":""},{"url":"https://images5.alphacoders.com/605/605588.jpg","alt":""},{"url":"https://images6.alphacoders.com/606/606664.png","alt":""},{"url":"https://pic.netbian.com/uploads/allimg/211108/000010-1636300810110b.jpg","alt":""},{"url":"https://pic.netbian.com/uploads/allimg/170819/161724-150313064436fd.jpg","alt":""},{"url":"https://images7.alphacoders.com/652/652552.jpg","alt":""}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>漫威</title>
      <link href="/Gallery/marvel.html"/>
      <url>/Gallery/marvel.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://pic.netbian.com/uploads/allimg/220608/225113-1654699873cabb.jpg","alt":""},{"url":"https://pic.netbian.com/uploads/allimg/220914/230732-16631680520918.jpg","alt":""},{"url":"https://pic.netbian.com/uploads/allimg/190518/132527-1558157127e230.jpg","alt":""},{"url":"https://pic.netbian.com/uploads/allimg/190816/085939-15659171790acd.jpg","alt":""},{"url":"https://image.photocnc.com/aoaodcom/2019-12/15/20191215084452c5ac74d9552e5cc2db5fbdb5b94658f9.jpg.h700.webp","alt":""},{"url":"https://image.photocnc.com/aoaodcom/2022-01/04/2022010412282509be123faecf0949485c32deab8bfe5f.jpg.h700.webp","alt":""},{"url":"https://image.photocnc.com/aoaodcom/2022-03/11/20220311113711c2caf8ffede168fdc8cb5e961c556edb.jpg.h700.webp","alt":""},{"url":"https://image.photocnc.com/aoaodcom/2020-09/23/202009230957490f03fe29102b2153a435ab3cce63e9d1.jpg.h700.webp","alt":""}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>美女</title>
      <link href="/Gallery/meinv.html"/>
      <url>/Gallery/meinv.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://images4.alphacoders.com/742/74258.jpg","alt":""},{"url":"https://images.alphacoders.com/152/152021.jpg","alt":""},{"url":"https://images.alphacoders.com/152/152091.jpg","alt":""},{"url":"https://images.alphacoders.com/154/154403.jpg","alt":""},{"url":"https://images4.alphacoders.com/154/154404.jpg","alt":""},{"url":"https://images4.alphacoders.com/167/167234.jpg","alt":""},{"url":"https://images4.alphacoders.com/175/175016.jpg","alt":""},{"url":"https://images.alphacoders.com/187/187183.jpg","alt":""},{"url":"https://images4.alphacoders.com/197/197516.jpg","alt":""},{"url":"https://images4.alphacoders.com/203/203014.jpg","alt":""},{"url":"https://images.alphacoders.com/208/208661.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2016/11/14/04/54/woman-1822646_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2017/12/30/13/25/portrait-3050076_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2016/11/14/03/43/kimono-1822520_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2016/11/14/04/25/umbrella-1822586_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2016/11/14/03/44/girls-1822521_960_720.jpg","alt":""},{"url":"https://s1.ax1x.com/2023/03/07/ppZcpHU.jpg","alt":""}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>靓女</title>
      <link href="/Gallery/ohmygirl.html"/>
      <url>/Gallery/ohmygirl.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg","alt":""}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>壁纸</title>
      <link href="/Gallery/wallpaper.html"/>
      <url>/Gallery/wallpaper.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg","alt":""}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>美女</title>
      <link href="/Gallery/mengchong.html"/>
      <url>/Gallery/mengchong.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://cdn.pixabay.com/photo/2023/02/02/13/27/cat-7762887_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2021/10/01/18/53/corgi-6673343_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2023/01/23/15/02/beaver-rat-7738914_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2023/01/12/07/19/rat-7713508_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2017/08/05/22/29/gorilla-2586193_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2023/01/08/21/05/squirrel-7706132_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2022/01/18/07/36/cat-6946498_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2019/07/23/13/51/shepherd-dog-4357790_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2017/12/11/15/34/lion-3012515_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2016/11/01/23/41/massage-1790063_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2018/07/22/20/02/horse-3555391_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2017/08/16/18/35/pug-2648774_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2016/04/16/00/05/piglet-1332259_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2017/06/25/13/21/crazy-goats-2440802_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2017/06/08/16/39/kangaroo-2384072_960_720.jpg","alt":""},{"url":"https://cdn.pixabay.com/photo/2016/03/27/19/13/scared-1283751_960_720.jpg","alt":""}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>博主的网盘分享</title>
      <link href="/learn/index.html"/>
      <url>/learn/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="编程开发"><a href="#编程开发" class="headerlink" title="编程开发"></a>编程开发</h1><div class="tabs" id="资源下载"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#资源下载-1">编程入门</button></li><li class="tab"><button type="button" data-href="#资源下载-2">前端开发</button></li><li class="tab"><button type="button" data-href="#资源下载-3">python爬虫</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="资源下载-1"><p><a href="https://www.aliyundrive.com/s/en6KkN7ALbm">Python小白也能听懂的入门课</a><br><a href="https://www.aliyundrive.com/s/4wTrp9X45H4">Go语言核心36讲</a><br><a href="https://www.aliyundrive.com/s/kVTnLXvA4GY">开课吧全套编程教程（180G）</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="资源下载-2"><p><a href="https://pan.quark.cn/s/4407bbdf68f9">极客学院全套ⅥP视频(AS版)</a><br><a href="https://caiyun.139.com/m/i?175CdCmqIgTdW">江哥带你玩转VUE3</a>    提取码：GeWD<br><a href="https://www.aliyundrive.com/s/Hqi2o4CtEC2">前端全链路性能优化实战</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="资源下载-3"><p><a href="https://www.aliyundrive.com/s/vs6hyP1eewC">畅销3年的Python分布式爬虫课程全套</a><br><a href="https://caiyun.139.com/m/i?175CkcQ3jWm79">python一百天参考书籍</a><br><a href="https://pan.baidu.com/s/1-ycO7zJxK1h96l6MxdAUAA?pwd=meit">崔庆才_Python3爬虫入门到精通课程视频 34课</a>   提取码：meit</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>听听音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- 进阶示例 -->    <div id="aplayer-UzEftpHz" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="332064694" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"    ></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>博主的网盘分享</title>
      <link href="/mv/index.html"/>
      <url>/mv/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="国外电影"><a href="#国外电影" class="headerlink" title="国外电影"></a>国外电影</h1><div class="tabs" id="资源下载"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#资源下载-1">恐怖惊悚</button></li><li class="tab"><button type="button" data-href="#资源下载-2">枪战动作</button></li><li class="tab"><button type="button" data-href="#资源下载-3">脑洞科幻</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="资源下载-1"><p><a href="https://pan.quark.cn/s/36732ea23452#/list/share">梅根.2022.1080p.mp4</a><br><a href="https://pan.quark.cn/s/8dbca506f2c6#/list/share">小丑回魂2.mp4 附带中文外挂字幕</a><br><a href="https://pan.quark.cn/s/6e35ac9391c3#/list/share">致命弯道全7部</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="资源下载-2"><p><a href="https://pan.quark.cn/s/b8b6897337ba#/list/share">疾速备战.mkv</a><br><a href="https://pan.quark.cn/s/80ce012a2798">地狱犬. 2022</a><br><a href="https://pan.quark.cn/s/e52a37ca9ccd">意外杀手2：杀手假期 Accident Man 2 (2022) 两部合集</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="资源下载-3"><p><a href="https://pan.quark.cn/s/c3c977ee3fc8">喋血战士</a><br><a href="https://pan.quark.cn/s/92797c3ed922">暗夜博士：莫比乌斯（2022）漫威</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>壁纸</title>
      <link href="/wallpaper/index.html"/>
      <url>/wallpaper/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://images5.alphacoders.com/606/606284.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">One Piece</div>  <p>关于海贼王的图片</p>  <a href='/Gallery/haizeiwang'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://images5.alphacoders.com/315/315646.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">美女</div>  <p>各种美女图片</p>  <a href='/Gallery/meinv'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.pixabay.com/photo/2023/02/07/13/39/monkey-7774171_960_720.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">萌宠</div>  <p>欣赏萌萌哒的小动物</p>  <a href='/Gallery/mengchong'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
  
</search>
